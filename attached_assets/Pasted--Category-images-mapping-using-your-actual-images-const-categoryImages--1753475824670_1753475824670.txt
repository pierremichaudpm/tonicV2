// Category images mapping - using your actual images
        const categoryImages = {
            'Beach Pro Tour': 'images/beach-pro-tour.jpg',
            'Grands Prix Cyclistes': 'images/cycling.jpg',
            'Marathon Beneva 21K': 'images/marathon-beneva.jpg',
            'UCI 2026': 'images/uci-2026.jpg',
            'Studio 76': 'images/studio-76.jpg',
            'Dock 619': 'images/dock-619.jpg',
            '21K de Montréal': 'images/21k-montreal.jpg',
            'Groupe Tonic': 'images/tonic-logo.png'
        };
        
        // Load saved PDFs
        function loadPDFs() {
            const saved = JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]');
            const container = document.getElementById('pdfList');
            
            if (saved.length === 0) {
                container.innerHTML = '<p class="text-gray-400 col-span-full text-center">Aucun PDF enregistré</p>';
                return;
            }
            
            container.innerHTML = saved.map(pdf => {
                const categoryClass = getCategoryClass(pdf.category);
                const categoryImage = categoryImages[pdf.category] || 'images/tonic-logo.png';<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PDF CMS - Groupe Tonic</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
            background: #0f172a;
        }
        
        .pdf-card {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
        }
        
        .pdf-card:hover {
            background: rgba(255, 255, 255, 0.08);
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        }
        
        .drop-zone {
            border: 2px dashed rgba(59, 130, 246, 0.5);
            transition: all 0.3s ease;
        }
        
        .drop-zone.active {
            border-color: #3b82f6;
            background: rgba(59, 130, 246, 0.1);
        }
        
        .pdf-viewer {
            background: #1e293b;
            border-radius: 12px;
            overflow: hidden;
        }
        
        /* Category Colors */
        .category-beach { background-color: #ff0e9b; }
        .category-cycling { background-color: #b7d233; }
        .category-marathon { background-color: #463092; }
        .category-uci { background-color: #da273b; }
        .category-studio { background-color: #06b6d4; }
        .category-dock { background-color: #6b7280; }
        .category-21k { background-color: #f59e0b; }
        .category-tonic { background-color: #f97316; }
    </style>
</head>
<body class="text-white">
    <div class="min-h-screen p-4 md:p-8">
        <div class="max-w-7xl mx-auto">
            <!-- Header -->
            <header class="text-center mb-8">
                <h1 class="text-4xl font-bold mb-2">Groupe Tonic - PDF Manager</h1>
                <p class="text-gray-400">Système de gestion des communiqués PDF</p>
            </header>

            <!-- Upload Section -->
            <div class="bg-white/5 rounded-2xl p-6 mb-8">
                <h2 class="text-2xl font-semibold mb-6">Ajouter un PDF</h2>
                
                <form id="uploadForm" class="space-y-4">
                    <div class="grid md:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium mb-2">Titre *</label>
                            <input type="text" id="title" class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg focus:border-blue-500 focus:outline-none" required>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium mb-2">Sous-titre</label>
                            <input type="text" id="subtitle" class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg focus:border-blue-500 focus:outline-none">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium mb-2">Date *</label>
                            <input type="date" id="date" class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg focus:border-blue-500 focus:outline-none" required>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium mb-2">Catégorie *</label>
                            <select id="category" class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg focus:border-blue-500 focus:outline-none" required>
                                <option value="">Sélectionner une catégorie</option>
                                <option value="Beach Pro Tour">Beach Pro Tour</option>
                                <option value="Grands Prix Cyclistes">Grands Prix Cyclistes</option>
                                <option value="Marathon Beneva 21K">Marathon Beneva 21K</option>
                                <option value="UCI 2026">UCI 2026</option>
                                <option value="Studio 76">Studio 76</option>
                                <option value="Dock 619">Dock 619</option>
                                <option value="21K de Montréal">21K de Montréal</option>
                                <option value="Groupe Tonic">Groupe Tonic</option>
                            </select>
                        </div>
                    </div>
                    
                    <!-- Drop Zone -->
                    <div>
                        <label class="block text-sm font-medium mb-2">Fichier PDF *</label>
                        <div id="dropZone" class="drop-zone rounded-xl p-12 text-center cursor-pointer">
                            <svg class="w-16 h-16 mx-auto mb-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
                            </svg>
                            <p class="text-lg mb-2">Glissez votre PDF ici</p>
                            <p class="text-sm text-gray-400">ou cliquez pour sélectionner</p>
                            <input type="file" id="fileInput" class="hidden" accept=".pdf">
                        </div>
                        <div id="fileInfo" class="mt-3"></div>
                    </div>
                    
                    <button type="submit" class="w-full md:w-auto px-8 py-3 bg-blue-600 hover:bg-blue-700 rounded-lg font-medium transition-colors">
                        Enregistrer
                    </button>
                </form>
            </div>

            <!-- PDF List -->
            <div class="mb-8">
                <h2 class="text-2xl font-semibold mb-6">PDFs enregistrés</h2>
                <div id="pdfList" class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
                    <!-- PDF cards will be inserted here -->
                </div>
            </div>
        </div>
    </div>

    <!-- PDF Viewer Modal -->
    <div id="viewerModal" class="fixed inset-0 bg-black/90 backdrop-blur-sm hidden z-50">
        <div class="h-full flex flex-col">
            <!-- Modal Header -->
            <div class="flex justify-between items-center p-4 bg-black/50">
                <div>
                    <h3 id="modalTitle" class="text-xl font-semibold"></h3>
                    <p id="modalSubtitle" class="text-gray-400 text-sm"></p>
                </div>
                <button onclick="closeViewer()" class="p-2 hover:bg-white/10 rounded-lg transition-colors">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
            
            <!-- PDF Container -->
            <div class="flex-1 p-4 overflow-auto">
                <div class="pdf-viewer max-w-5xl mx-auto h-full">
                    <iframe id="pdfFrame" class="w-full h-full rounded-lg" style="min-height: 80vh;"></iframe>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Storage key
        const STORAGE_KEY = 'pdfCmsData';
        
        // Load saved PDFs
        function loadPDFs() {
            const saved = JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]');
            const container = document.getElementById('pdfList');
            
            if (saved.length === 0) {
                container.innerHTML = '<p class="text-gray-400 col-span-full text-center">Aucun PDF enregistré</p>';
                return;
            }
            
            container.innerHTML = saved.map(pdf => {
                const categoryClass = getCategoryClass(pdf.category);
                return `
                    <div class="pdf-card rounded-xl overflow-hidden cursor-pointer" onclick="viewPDF(${pdf.id})">
                        <!-- Category Image -->
                        <div class="h-48 overflow-hidden">
                            <img src="${categoryImage}" alt="${pdf.category}" class="w-full h-full object-cover">
                        </div>
                        
                        <div class="p-6">
                            <div class="flex items-start justify-between mb-4">
                                <svg class="w-10 h-10 text-red-500" fill="currentColor" viewBox="0 0 20 20">
                                    <path d="M4 18h12a2 2 0 002-2V6.414A2 2 0 0017.414 5L14 1.586A2 2 0 0012.586 1H4a2 2 0 00-2 2v13a2 2 0 002 2z"/>
                                    <path fill="white" d="M7 13.5a.5.5 0 01-.5-.5V9a.5.5 0 011 0v1.293l1.146-1.147a.5.5 0 01.708.708L8.207 11H9.5a.5.5 0 010 1H7.5a.5.5 0 01-.5-.5z"/>
                                </svg>
                                <button onclick="deletePDF(event, ${pdf.id})" class="text-red-400 hover:text-red-300 p-1">
                                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                    </svg>
                                </button>
                            </div>
                            
                            <h3 class="font-semibold text-lg mb-1">${pdf.title}</h3>
                            ${pdf.subtitle ? `<p class="text-gray-400 text-sm mb-2">${pdf.subtitle}</p>` : ''}
                            <p class="text-gray-500 text-sm">${formatDate(pdf.date)}</p>
                            <span class="inline-block mt-3 px-3 py-1 ${categoryClass} text-white rounded-full text-xs font-medium">${pdf.category}</span>
                        </div>
                    </div>
                `;
            }).join('');
        }
        
        // Get category class
        function getCategoryClass(category) {
            const categoryMap = {
                'Beach Pro Tour': 'category-beach',
                'Grands Prix Cyclistes': 'category-cycling',
                'Marathon Beneva 21K': 'category-marathon',
                'UCI 2026': 'category-uci',
                'Studio 76': 'category-studio',
                'Dock 619': 'category-dock',
                '21K de Montréal': 'category-21k',
                'Groupe Tonic': 'category-tonic'
            };
            return categoryMap[category] || 'bg-gray-600';
        }
        
        // Format date
        function formatDate(dateString) {
            const options = { year: 'numeric', month: 'long', day: 'numeric' };
            return new Date(dateString).toLocaleDateString('fr-FR', options);
        }
        
        // File handling
        let selectedFile = null;
        
        const dropZone = document.getElementById('dropZone');
        const fileInput = document.getElementById('fileInput');
        
        dropZone.addEventListener('click', () => fileInput.click());
        
        dropZone.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropZone.classList.add('active');
        });
        
        dropZone.addEventListener('dragleave', () => {
            dropZone.classList.remove('active');
        });
        
        dropZone.addEventListener('drop', (e) => {
            e.preventDefault();
            dropZone.classList.remove('active');
            
            const files = e.dataTransfer.files;
            if (files.length && files[0].type === 'application/pdf') {
                handleFile(files[0]);
            }
        });
        
        fileInput.addEventListener('change', (e) => {
            if (e.target.files.length) {
                handleFile(e.target.files[0]);
            }
        });
        
        function handleFile(file) {
            selectedFile = file;
            document.getElementById('fileInfo').innerHTML = `
                <div class="flex items-center gap-2 text-green-400">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <span>${file.name} (${(file.size / 1024 / 1024).toFixed(2)} MB)</span>
                </div>
            `;
        }
        
        // Form submission
        document.getElementById('uploadForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            if (!selectedFile) {
                alert('Veuillez sélectionner un fichier PDF');
                return;
            }
            
            // Convert file to base64
            const reader = new FileReader();
            reader.onload = function(e) {
                const pdfData = {
                    id: Date.now(),
                    title: document.getElementById('title').value,
                    subtitle: document.getElementById('subtitle').value,
                    date: document.getElementById('date').value,
                    category: document.getElementById('category').value,
                    fileName: selectedFile.name,
                    fileData: e.target.result,
                    createdAt: new Date().toISOString()
                };
                
                // Save to localStorage
                const saved = JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]');
                saved.unshift(pdfData);
                localStorage.setItem(STORAGE_KEY, JSON.stringify(saved));
                
                // Reset form
                document.getElementById('uploadForm').reset();
                selectedFile = null;
                document.getElementById('fileInfo').innerHTML = '';
                
                // Reload list
                loadPDFs();
                
                // Success message
                alert('PDF enregistré avec succès!');
            };
            
            reader.readAsDataURL(selectedFile);
        });
        
        // View PDF
        function viewPDF(id) {
            const saved = JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]');
            const pdf = saved.find(p => p.id === id);
            
            if (pdf) {
                document.getElementById('modalTitle').textContent = pdf.title;
                document.getElementById('modalSubtitle').textContent = pdf.subtitle || formatDate(pdf.date);
                document.getElementById('pdfFrame').src = pdf.fileData;
                document.getElementById('viewerModal').classList.remove('hidden');
            }
        }
        
        // Close viewer
        function closeViewer() {
            document.getElementById('viewerModal').classList.add('hidden');
            document.getElementById('pdfFrame').src = '';
        }
        
        // Delete PDF
        function deletePDF(event, id) {
            event.stopPropagation();
            
            if (confirm('Supprimer ce PDF?')) {
                const saved = JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]');
                const filtered = saved.filter(p => p.id !== id);
                localStorage.setItem(STORAGE_KEY, JSON.stringify(filtered));
                loadPDFs();
            }
        }
        
        // Close modal on escape
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
                closeViewer();
            }
        });
        
        // Initial load
        loadPDFs();
    </script>
</body>
</html>